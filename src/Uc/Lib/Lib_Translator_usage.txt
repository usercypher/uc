<?php

require 'Translator.php';

$endl = "\n";

$t = new Translator();
$t->setDefaultPluralRule();

$t->translations = array(
    // Basic string
    'hello' => 'Hello World',

    // Plural forms
    'apple' => array(
        'There is no apple',
        'There is :count apple',
        'There are :count apples'
    ),

    // With placeholders
    'welcome' => 'Welcome, :name!',
    'gift' => array(
        ':name has no gift', // :name custom placeholder
        ':name has :count gift', // :count use internally
        ':name has :count gifts'
    )
);

// Test 1: Basic translation
echo $t->t('hello') . $endl;
// Expected: Hello World

// Test 2: Plural (none)
echo $t->nt('apple', 0, array(':count' => 0)) . $endl;
// Expected: There is no apple

// Test 3: Plural (singular)
echo $t->nt('apple', 1, array(':count' => 1)) . $endl;
// Expected: There is 1 apple

// Test 4: Plural (plural)
echo $t->nt('apple', 5, array(':count' => 5)) . $endl;
// Expected: There are 5 apples

// Test 5: Placeholder replacement
echo $t->t('welcome', array(':name' => 'Alice')) . $endl;
// Expected: Welcome, Alice!

// Test 6: Plural + placeholder
echo $t->nt('gift', 0, array(':count' => 1, ':name' => 'Bob')) . $endl;
// Expected: Bob has no gift

// Test 7: Plural + placeholder
echo $t->nt('gift', 1, array(':count' => 1, ':name' => 'Bob')) . $endl;
// Expected: Bob has 1 gift

echo $t->nt('gift', 3, array(':count' => 3, ':name' => 'Bob')) . $endl;
// Expected: Bob has 3 gifts

// Test 8: Missing key fallback
echo $t->t('not_exist') . $endl;
// Expected: not_exist

